/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { version1ImageGenerateFromImageWithTextAndMask } from "../../funcs/version1ImageGenerateFromImageWithTextAndMask.js";
import * as operations from "../../models/operations/index.js";
import { formatResult } from "../tools.js";
const args = {
    request: operations.GenerateFromImageWithTextAndMaskRequest$inboundSchema,
};
export const tool$version1ImageGenerateFromImageWithTextAndMask = {
    name: "version1-image_generate-from-image-with-text-and-mask",
    description: `Image-to-image with a mask

Selectively modify portions of an image using a mask. The \`mask\` must be the same shape and size as the init image. This endpoint also supports \`image\` parameters with alpha channels.  See below for more details. 

> NOTE: Only **Version 1** engines will work with this endpoint.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await version1ImageGenerateFromImageWithTextAndMask(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value.result;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=version1ImageGenerateFromImageWithTextAndMask.js.map