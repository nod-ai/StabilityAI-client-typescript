/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OrganizationMembership$inboundSchema = z.object({
    id: z.string(),
    is_default: z.boolean(),
    name: z.string(),
    role: z.string(),
}).transform((v) => {
    return remap$(v, {
        "is_default": "isDefault",
    });
});
/** @internal */
export const OrganizationMembership$outboundSchema = z.object({
    id: z.string(),
    isDefault: z.boolean(),
    name: z.string(),
    role: z.string(),
}).transform((v) => {
    return remap$(v, {
        isDefault: "is_default",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrganizationMembership$;
(function (OrganizationMembership$) {
    /** @deprecated use `OrganizationMembership$inboundSchema` instead. */
    OrganizationMembership$.inboundSchema = OrganizationMembership$inboundSchema;
    /** @deprecated use `OrganizationMembership$outboundSchema` instead. */
    OrganizationMembership$.outboundSchema = OrganizationMembership$outboundSchema;
})(OrganizationMembership$ || (OrganizationMembership$ = {}));
export function organizationMembershipToJSON(organizationMembership) {
    return JSON.stringify(OrganizationMembership$outboundSchema.parse(organizationMembership));
}
export function organizationMembershipFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrganizationMembership$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationMembership' from JSON`);
}
//# sourceMappingURL=organizationmembership.js.map