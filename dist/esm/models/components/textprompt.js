/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const TextPrompt$inboundSchema = z.object({
    text: z.string(),
    weight: z.number().optional(),
});
/** @internal */
export const TextPrompt$outboundSchema = z.object({
    text: z.string(),
    weight: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TextPrompt$;
(function (TextPrompt$) {
    /** @deprecated use `TextPrompt$inboundSchema` instead. */
    TextPrompt$.inboundSchema = TextPrompt$inboundSchema;
    /** @deprecated use `TextPrompt$outboundSchema` instead. */
    TextPrompt$.outboundSchema = TextPrompt$outboundSchema;
})(TextPrompt$ || (TextPrompt$ = {}));
export function textPromptToJSON(textPrompt) {
    return JSON.stringify(TextPrompt$outboundSchema.parse(textPrompt));
}
export function textPromptFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TextPrompt$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TextPrompt' from JSON`);
}
//# sourceMappingURL=textprompt.js.map