/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { OrganizationMembership$inboundSchema, OrganizationMembership$outboundSchema, } from "./organizationmembership.js";
/** @internal */
export const AccountResponseBody$inboundSchema = z.object({
    email: z.string(),
    id: z.string(),
    organizations: z.array(OrganizationMembership$inboundSchema),
    profile_picture: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "profile_picture": "profilePicture",
    });
});
/** @internal */
export const AccountResponseBody$outboundSchema = z.object({
    email: z.string(),
    id: z.string(),
    organizations: z.array(OrganizationMembership$outboundSchema),
    profilePicture: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        profilePicture: "profile_picture",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountResponseBody$;
(function (AccountResponseBody$) {
    /** @deprecated use `AccountResponseBody$inboundSchema` instead. */
    AccountResponseBody$.inboundSchema = AccountResponseBody$inboundSchema;
    /** @deprecated use `AccountResponseBody$outboundSchema` instead. */
    AccountResponseBody$.outboundSchema = AccountResponseBody$outboundSchema;
})(AccountResponseBody$ || (AccountResponseBody$ = {}));
export function accountResponseBodyToJSON(accountResponseBody) {
    return JSON.stringify(AccountResponseBody$outboundSchema.parse(accountResponseBody));
}
export function accountResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountResponseBody' from JSON`);
}
//# sourceMappingURL=accountresponsebody.js.map