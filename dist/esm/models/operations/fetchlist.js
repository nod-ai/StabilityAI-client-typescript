/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const FetchListRequest$inboundSchema = z.object({
    Organization: z.string().optional(),
    "Stability-Client-ID": z.string().optional(),
    "Stability-Client-Version": z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "Organization": "organization",
        "Stability-Client-ID": "stabilityClientID",
        "Stability-Client-Version": "stabilityClientVersion",
    });
});
/** @internal */
export const FetchListRequest$outboundSchema = z.object({
    organization: z.string().optional(),
    stabilityClientID: z.string().optional(),
    stabilityClientVersion: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        organization: "Organization",
        stabilityClientID: "Stability-Client-ID",
        stabilityClientVersion: "Stability-Client-Version",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FetchListRequest$;
(function (FetchListRequest$) {
    /** @deprecated use `FetchListRequest$inboundSchema` instead. */
    FetchListRequest$.inboundSchema = FetchListRequest$inboundSchema;
    /** @deprecated use `FetchListRequest$outboundSchema` instead. */
    FetchListRequest$.outboundSchema = FetchListRequest$outboundSchema;
})(FetchListRequest$ || (FetchListRequest$ = {}));
export function fetchListRequestToJSON(fetchListRequest) {
    return JSON.stringify(FetchListRequest$outboundSchema.parse(fetchListRequest));
}
export function fetchListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FetchListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchListRequest' from JSON`);
}
//# sourceMappingURL=fetchlist.js.map