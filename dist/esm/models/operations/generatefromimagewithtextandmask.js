/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GenerateFromImageWithTextAndMaskRequest$inboundSchema = z.object({
    engine_id: z.string(),
    Organization: z.string().optional(),
    "Stability-Client-ID": z.string().optional(),
    "Stability-Client-Version": z.string().optional(),
    MaskingRequestBody: components.MaskingRequestBody$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "engine_id": "engineId",
        "Organization": "organization",
        "Stability-Client-ID": "stabilityClientID",
        "Stability-Client-Version": "stabilityClientVersion",
        "MaskingRequestBody": "maskingRequestBody",
    });
});
/** @internal */
export const GenerateFromImageWithTextAndMaskRequest$outboundSchema = z.object({
    engineId: z.string(),
    organization: z.string().optional(),
    stabilityClientID: z.string().optional(),
    stabilityClientVersion: z.string().optional(),
    maskingRequestBody: components.MaskingRequestBody$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        engineId: "engine_id",
        organization: "Organization",
        stabilityClientID: "Stability-Client-ID",
        stabilityClientVersion: "Stability-Client-Version",
        maskingRequestBody: "MaskingRequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GenerateFromImageWithTextAndMaskRequest$;
(function (GenerateFromImageWithTextAndMaskRequest$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskRequest$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskRequest$.inboundSchema = GenerateFromImageWithTextAndMaskRequest$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskRequest$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskRequest$.outboundSchema = GenerateFromImageWithTextAndMaskRequest$outboundSchema;
})(GenerateFromImageWithTextAndMaskRequest$ || (GenerateFromImageWithTextAndMaskRequest$ = {}));
export function generateFromImageWithTextAndMaskRequestToJSON(generateFromImageWithTextAndMaskRequest) {
    return JSON.stringify(GenerateFromImageWithTextAndMaskRequest$outboundSchema.parse(generateFromImageWithTextAndMaskRequest));
}
export function generateFromImageWithTextAndMaskRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GenerateFromImageWithTextAndMaskRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskRequest' from JSON`);
}
/** @internal */
export const GenerateFromImageWithTextAndMaskResponseBody$inboundSchema = z.object({
    artifacts: z.array(components.Image$inboundSchema).optional(),
});
/** @internal */
export const GenerateFromImageWithTextAndMaskResponseBody$outboundSchema = z.object({
    artifacts: z.array(components.Image$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GenerateFromImageWithTextAndMaskResponseBody$;
(function (GenerateFromImageWithTextAndMaskResponseBody$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseBody$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseBody$.inboundSchema = GenerateFromImageWithTextAndMaskResponseBody$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseBody$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseBody$.outboundSchema = GenerateFromImageWithTextAndMaskResponseBody$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponseBody$ || (GenerateFromImageWithTextAndMaskResponseBody$ = {}));
export function generateFromImageWithTextAndMaskResponseBodyToJSON(generateFromImageWithTextAndMaskResponseBody) {
    return JSON.stringify(GenerateFromImageWithTextAndMaskResponseBody$outboundSchema.parse(generateFromImageWithTextAndMaskResponseBody));
}
export function generateFromImageWithTextAndMaskResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GenerateFromImageWithTextAndMaskResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponseBody' from JSON`);
}
/** @internal */
export const GenerateFromImageWithTextAndMaskResponseResult$inboundSchema = z.union([
    z.lazy(() => GenerateFromImageWithTextAndMaskResponseBody$inboundSchema),
    z.instanceof((ReadableStream)),
]);
/** @internal */
export const GenerateFromImageWithTextAndMaskResponseResult$outboundSchema = z.union([
    z.lazy(() => GenerateFromImageWithTextAndMaskResponseBody$outboundSchema),
    z.instanceof((ReadableStream)),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GenerateFromImageWithTextAndMaskResponseResult$;
(function (GenerateFromImageWithTextAndMaskResponseResult$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseResult$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseResult$.inboundSchema = GenerateFromImageWithTextAndMaskResponseResult$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseResult$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseResult$.outboundSchema = GenerateFromImageWithTextAndMaskResponseResult$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponseResult$ || (GenerateFromImageWithTextAndMaskResponseResult$ = {}));
export function generateFromImageWithTextAndMaskResponseResultToJSON(generateFromImageWithTextAndMaskResponseResult) {
    return JSON.stringify(GenerateFromImageWithTextAndMaskResponseResult$outboundSchema.parse(generateFromImageWithTextAndMaskResponseResult));
}
export function generateFromImageWithTextAndMaskResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GenerateFromImageWithTextAndMaskResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponseResult' from JSON`);
}
/** @internal */
export const GenerateFromImageWithTextAndMaskResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        z.lazy(() => GenerateFromImageWithTextAndMaskResponseBody$inboundSchema),
        z.instanceof((ReadableStream)),
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const GenerateFromImageWithTextAndMaskResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        z.lazy(() => GenerateFromImageWithTextAndMaskResponseBody$outboundSchema),
        z.instanceof((ReadableStream)),
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GenerateFromImageWithTextAndMaskResponse$;
(function (GenerateFromImageWithTextAndMaskResponse$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponse$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponse$.inboundSchema = GenerateFromImageWithTextAndMaskResponse$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponse$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponse$.outboundSchema = GenerateFromImageWithTextAndMaskResponse$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponse$ || (GenerateFromImageWithTextAndMaskResponse$ = {}));
export function generateFromImageWithTextAndMaskResponseToJSON(generateFromImageWithTextAndMaskResponse) {
    return JSON.stringify(GenerateFromImageWithTextAndMaskResponse$outboundSchema.parse(generateFromImageWithTextAndMaskResponse));
}
export function generateFromImageWithTextAndMaskResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GenerateFromImageWithTextAndMaskResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponse' from JSON`);
}
//# sourceMappingURL=generatefromimagewithtextandmask.js.map