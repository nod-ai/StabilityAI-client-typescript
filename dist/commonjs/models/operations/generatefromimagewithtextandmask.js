"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateFromImageWithTextAndMaskResponse$ = exports.GenerateFromImageWithTextAndMaskResponse$outboundSchema = exports.GenerateFromImageWithTextAndMaskResponse$inboundSchema = exports.GenerateFromImageWithTextAndMaskResponseResult$ = exports.GenerateFromImageWithTextAndMaskResponseResult$outboundSchema = exports.GenerateFromImageWithTextAndMaskResponseResult$inboundSchema = exports.GenerateFromImageWithTextAndMaskResponseBody$ = exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema = exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema = exports.GenerateFromImageWithTextAndMaskRequest$ = exports.GenerateFromImageWithTextAndMaskRequest$outboundSchema = exports.GenerateFromImageWithTextAndMaskRequest$inboundSchema = void 0;
exports.generateFromImageWithTextAndMaskRequestToJSON = generateFromImageWithTextAndMaskRequestToJSON;
exports.generateFromImageWithTextAndMaskRequestFromJSON = generateFromImageWithTextAndMaskRequestFromJSON;
exports.generateFromImageWithTextAndMaskResponseBodyToJSON = generateFromImageWithTextAndMaskResponseBodyToJSON;
exports.generateFromImageWithTextAndMaskResponseBodyFromJSON = generateFromImageWithTextAndMaskResponseBodyFromJSON;
exports.generateFromImageWithTextAndMaskResponseResultToJSON = generateFromImageWithTextAndMaskResponseResultToJSON;
exports.generateFromImageWithTextAndMaskResponseResultFromJSON = generateFromImageWithTextAndMaskResponseResultFromJSON;
exports.generateFromImageWithTextAndMaskResponseToJSON = generateFromImageWithTextAndMaskResponseToJSON;
exports.generateFromImageWithTextAndMaskResponseFromJSON = generateFromImageWithTextAndMaskResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.GenerateFromImageWithTextAndMaskRequest$inboundSchema = z.object({
    engine_id: z.string(),
    Organization: z.string().optional(),
    "Stability-Client-ID": z.string().optional(),
    "Stability-Client-Version": z.string().optional(),
    MaskingRequestBody: components.MaskingRequestBody$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "engine_id": "engineId",
        "Organization": "organization",
        "Stability-Client-ID": "stabilityClientID",
        "Stability-Client-Version": "stabilityClientVersion",
        "MaskingRequestBody": "maskingRequestBody",
    });
});
/** @internal */
exports.GenerateFromImageWithTextAndMaskRequest$outboundSchema = z.object({
    engineId: z.string(),
    organization: z.string().optional(),
    stabilityClientID: z.string().optional(),
    stabilityClientVersion: z.string().optional(),
    maskingRequestBody: components.MaskingRequestBody$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        engineId: "engine_id",
        organization: "Organization",
        stabilityClientID: "Stability-Client-ID",
        stabilityClientVersion: "Stability-Client-Version",
        maskingRequestBody: "MaskingRequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenerateFromImageWithTextAndMaskRequest$;
(function (GenerateFromImageWithTextAndMaskRequest$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskRequest$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskRequest$.inboundSchema = exports.GenerateFromImageWithTextAndMaskRequest$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskRequest$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskRequest$.outboundSchema = exports.GenerateFromImageWithTextAndMaskRequest$outboundSchema;
})(GenerateFromImageWithTextAndMaskRequest$ || (exports.GenerateFromImageWithTextAndMaskRequest$ = GenerateFromImageWithTextAndMaskRequest$ = {}));
function generateFromImageWithTextAndMaskRequestToJSON(generateFromImageWithTextAndMaskRequest) {
    return JSON.stringify(exports.GenerateFromImageWithTextAndMaskRequest$outboundSchema.parse(generateFromImageWithTextAndMaskRequest));
}
function generateFromImageWithTextAndMaskRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenerateFromImageWithTextAndMaskRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskRequest' from JSON`);
}
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema = z.object({
    artifacts: z.array(components.Image$inboundSchema).optional(),
});
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema = z.object({
    artifacts: z.array(components.Image$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenerateFromImageWithTextAndMaskResponseBody$;
(function (GenerateFromImageWithTextAndMaskResponseBody$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseBody$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseBody$.inboundSchema = exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseBody$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseBody$.outboundSchema = exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponseBody$ || (exports.GenerateFromImageWithTextAndMaskResponseBody$ = GenerateFromImageWithTextAndMaskResponseBody$ = {}));
function generateFromImageWithTextAndMaskResponseBodyToJSON(generateFromImageWithTextAndMaskResponseBody) {
    return JSON.stringify(exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema.parse(generateFromImageWithTextAndMaskResponseBody));
}
function generateFromImageWithTextAndMaskResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponseBody' from JSON`);
}
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponseResult$inboundSchema = z.union([
    z.lazy(() => exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema),
    z.instanceof((ReadableStream)),
]);
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponseResult$outboundSchema = z.union([
    z.lazy(() => exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema),
    z.instanceof((ReadableStream)),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenerateFromImageWithTextAndMaskResponseResult$;
(function (GenerateFromImageWithTextAndMaskResponseResult$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseResult$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseResult$.inboundSchema = exports.GenerateFromImageWithTextAndMaskResponseResult$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponseResult$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponseResult$.outboundSchema = exports.GenerateFromImageWithTextAndMaskResponseResult$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponseResult$ || (exports.GenerateFromImageWithTextAndMaskResponseResult$ = GenerateFromImageWithTextAndMaskResponseResult$ = {}));
function generateFromImageWithTextAndMaskResponseResultToJSON(generateFromImageWithTextAndMaskResponseResult) {
    return JSON.stringify(exports.GenerateFromImageWithTextAndMaskResponseResult$outboundSchema.parse(generateFromImageWithTextAndMaskResponseResult));
}
function generateFromImageWithTextAndMaskResponseResultFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenerateFromImageWithTextAndMaskResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponseResult' from JSON`);
}
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        z.lazy(() => exports.GenerateFromImageWithTextAndMaskResponseBody$inboundSchema),
        z.instanceof((ReadableStream)),
    ]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
exports.GenerateFromImageWithTextAndMaskResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        z.lazy(() => exports.GenerateFromImageWithTextAndMaskResponseBody$outboundSchema),
        z.instanceof((ReadableStream)),
    ]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenerateFromImageWithTextAndMaskResponse$;
(function (GenerateFromImageWithTextAndMaskResponse$) {
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponse$inboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponse$.inboundSchema = exports.GenerateFromImageWithTextAndMaskResponse$inboundSchema;
    /** @deprecated use `GenerateFromImageWithTextAndMaskResponse$outboundSchema` instead. */
    GenerateFromImageWithTextAndMaskResponse$.outboundSchema = exports.GenerateFromImageWithTextAndMaskResponse$outboundSchema;
})(GenerateFromImageWithTextAndMaskResponse$ || (exports.GenerateFromImageWithTextAndMaskResponse$ = GenerateFromImageWithTextAndMaskResponse$ = {}));
function generateFromImageWithTextAndMaskResponseToJSON(generateFromImageWithTextAndMaskResponse) {
    return JSON.stringify(exports.GenerateFromImageWithTextAndMaskResponse$outboundSchema.parse(generateFromImageWithTextAndMaskResponse));
}
function generateFromImageWithTextAndMaskResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenerateFromImageWithTextAndMaskResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenerateFromImageWithTextAndMaskResponse' from JSON`);
}
//# sourceMappingURL=generatefromimagewithtextandmask.js.map