/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Text prompt for image generation
 */
export type TextPrompt = {
  /**
   * The prompt itself
   */
  text: string;
  /**
   * Weight of the prompt (use negative numbers for negative prompts)
   */
  weight?: number | undefined;
};

/** @internal */
export const TextPrompt$inboundSchema: z.ZodType<
  TextPrompt,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string(),
  weight: z.number().optional(),
});

/** @internal */
export type TextPrompt$Outbound = {
  text: string;
  weight?: number | undefined;
};

/** @internal */
export const TextPrompt$outboundSchema: z.ZodType<
  TextPrompt$Outbound,
  z.ZodTypeDef,
  TextPrompt
> = z.object({
  text: z.string(),
  weight: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TextPrompt$ {
  /** @deprecated use `TextPrompt$inboundSchema` instead. */
  export const inboundSchema = TextPrompt$inboundSchema;
  /** @deprecated use `TextPrompt$outboundSchema` instead. */
  export const outboundSchema = TextPrompt$outboundSchema;
  /** @deprecated use `TextPrompt$Outbound` instead. */
  export type Outbound = TextPrompt$Outbound;
}

export function textPromptToJSON(textPrompt: TextPrompt): string {
  return JSON.stringify(TextPrompt$outboundSchema.parse(textPrompt));
}

export function textPromptFromJSON(
  jsonString: string,
): SafeParseResult<TextPrompt, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TextPrompt$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TextPrompt' from JSON`,
  );
}
