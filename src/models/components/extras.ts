/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Extra parameters passed to the engine.
 *
 * @remarks
 * These parameters are used for in-development or experimental features and may change
 * without warning, so please use with caution.
 */
export type Extras = {};

/** @internal */
export const Extras$inboundSchema: z.ZodType<Extras, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Extras$Outbound = {};

/** @internal */
export const Extras$outboundSchema: z.ZodType<
  Extras$Outbound,
  z.ZodTypeDef,
  Extras
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Extras$ {
  /** @deprecated use `Extras$inboundSchema` instead. */
  export const inboundSchema = Extras$inboundSchema;
  /** @deprecated use `Extras$outboundSchema` instead. */
  export const outboundSchema = Extras$outboundSchema;
  /** @deprecated use `Extras$Outbound` instead. */
  export type Outbound = Extras$Outbound;
}

export function extrasToJSON(extras: Extras): string {
  return JSON.stringify(Extras$outboundSchema.parse(extras));
}

export function extrasFromJSON(
  jsonString: string,
): SafeParseResult<Extras, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Extras$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Extras' from JSON`,
  );
}
