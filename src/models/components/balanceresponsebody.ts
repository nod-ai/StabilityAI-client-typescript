/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BalanceResponseBody = {
  /**
   * The balance of the account/organization associated with the API key
   */
  credits: number;
};

/** @internal */
export const BalanceResponseBody$inboundSchema: z.ZodType<
  BalanceResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  credits: z.number(),
});

/** @internal */
export type BalanceResponseBody$Outbound = {
  credits: number;
};

/** @internal */
export const BalanceResponseBody$outboundSchema: z.ZodType<
  BalanceResponseBody$Outbound,
  z.ZodTypeDef,
  BalanceResponseBody
> = z.object({
  credits: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceResponseBody$ {
  /** @deprecated use `BalanceResponseBody$inboundSchema` instead. */
  export const inboundSchema = BalanceResponseBody$inboundSchema;
  /** @deprecated use `BalanceResponseBody$outboundSchema` instead. */
  export const outboundSchema = BalanceResponseBody$outboundSchema;
  /** @deprecated use `BalanceResponseBody$Outbound` instead. */
  export type Outbound = BalanceResponseBody$Outbound;
}

export function balanceResponseBodyToJSON(
  balanceResponseBody: BalanceResponseBody,
): string {
  return JSON.stringify(
    BalanceResponseBody$outboundSchema.parse(balanceResponseBody),
  );
}

export function balanceResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<BalanceResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BalanceResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BalanceResponseBody' from JSON`,
  );
}
